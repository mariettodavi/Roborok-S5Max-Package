###############################################################################
##################################################### Xiaomi Vacuum Robot #####
###############################################################################
homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'Xiaomi Roborock S5MAX Package'
        version: 'v1.0'
        author: 'Skillaci86'

    ##--------------------- IMPOSTAZIONI DEL PACKAGE ---------------------##
      setting:
        vacuum_host: &host !secret ip_roborock
        vacuum_name: &name XXX                                          #nome vacuum
        vacuum_entity: &entity 'XXX'                                    #entity_id vacuum
        vacuum_camera: &camera  'XXX'                                   #entity_id camera
        vacuum_token: &token !XXX                                       #token
        vacuum_username: &username XXX                                  #username
        vacuum_password: &password XXX                                  #password
        vacuum_name_stanza_16: &stanza_16 'XXX'                         #nome stanza
        vacuum_name_stanza_17: &stanza_17 'XXX'                         #nome stanza
        vacuum_name_stanza_18: &stanza_18 'XXX'                         #nome stanza
        vacuum_name_stanza_19: &stanza_19 'XXX'                         #nome stanza
        vacuum_name_stanza_20: &stanza_20 'XXX'                         #nome stanza
        vacuum_name_stanza_21: &stanza_21 'XXX'                         #nome stanza
        vacuum_name_stanza_22: &stanza_22 'XXX'                         #nome stanza
        vacuum_name_stanza_23: &stanza_23 'XXX'                         #nome stanza
        vacuum_name_zona_1: &zona_1 'XXX'                               #nome zona
        vacuum_name_zona_2: &zona_2 'XXX'                               #nome zona
        vacuum_name_zona_3: &zona_3 'XXX'                               #nome zona
        vacuum_name_zona_4: &zona_4 'XXX'                               #nome zona
        vacuum_name_zona_5: &zona_5 'XXX'                               #nome zona
        vacuum_name_zona_6: &zona_6 'XXX'                               #nome zona
        vacuum_segments: &coord_casa XXX                                #coordinate room [es 16,17...]
        vacuum_coord_stanza_16: &coord_stanza_16 XXX                    #coordinate stanza [[23850, 25000, 28050, 27750]]
        vacuum_coord_stanza_17: &coord_stanza_17 XXX                    #coordinate stanza
        vacuum_coord_stanza_18: &coord_stanza_18 XXX                    #coordinate stanza
        vacuum_coord_stanza_19: &coord_stanza_19 XXX                    #coordinate stanza
        vacuum_coord_stanza_20: &coord_stanza_20 XXX                    #coordinate stanza
        vacuum_coord_stanza_21: &coord_stanza_21 XXX                    #coordinate stanza
        vacuum_coord_stanza_22: &coord_stanza_22 XXX                    #coordinate stanza
        vacuum_coord_stanza_23: &coord_stanza_23 XXX                    #coordinate stanza
        vacuum_coord_zona_1: &coord_zona_1                              #coordinate zone
        vacuum_coord_zona_2: &coord_zona_2                              #coordinate zone
        vacuum_coord_zona_3: &coord_zona_3                              #coordinate zone
        vacuum_coord_zona_4: &coord_zona_4                              #coordinate zone
        vacuum_coord_zona_5: &coord_zona_5                              #coordinate zone
        vacuum_coord_zona_6: &coord_zona_6                              #coordinate zone
        vacuum_coord_cestino: &coord_cestino XXX                        #coordinate cestino es [27518,26026]
        vacuum_coord_acqua: &coord_acqua XXX                            #coordinate acqua es [27518,26026]
        vacuum_media_player: &play XXX                                  #mediaplayer per riproduzione annunci google                 
        vacuum_notifica_telegram: &telegram XXX                         #chadid telegram per notifiche                             


#******************************************************************************#
#                                   C O R P O                                  #
#******************************************************************************#

################################################################################
##                  Integrazione
###################################################
vacuum:
  - platform: xiaomi_miio
    host: *host
    token: *token
    name: *name

camera:
  - platform: xiaomi_cloud_map_extractor
    host: *host
    token: *token
    username: *username 
    password: *password 
    country: "de"
    name: *name 
    scan_interval: 15
    colors:
      color_map_outside: [255, 255, 255]
      color_path: [255, 255, 255]
    map_transformation:
      scale: 2
      trim:
        top: 20  
        bottom: 20        
    auto_update: true
    sizes:
      charger_radius: 4
      vacuum_radius: 6.5
    attributes:
      - calibration_points
      - charger
      - country
      - goto
      - goto_path
      - goto_predicted_path
      - image
      - is_empty
      - no_go_areas
      - no_mopping_areas
      - obstacles
      - path
      - vacuum_position
      - vacuum_room
      - walls
      - zones    
      - room_numbers
      - rooms
      - map_name
    room_colors:
      16: [133, 193, 233]  
      17: [72, 201, 176]
      18: [249, 84, 131]
      19: [84, 153, 199]
      20: [118, 176, 247]
      21: [129, 209, 249]
      22: [205, 106, 247]
      23: [252, 212, 81]
    draw:
      - charger
      - path
      - goto_path
      - predicted_path
      - no_go_zones
      - no_mopping_zones
      - vacuum_position
      - virtual_walls
      - zones


#########################################
###### Binary_sensor
#########################################
binary_sensor:
  - platform: ping
    name: connessione vacuum
    host: *host
    count: 2 
    scan_interval: 15
    
################################################################################
##                  Counter
###################################################
counter:
  vacuum_pulizie_effettuate:
    name: Pulizie Effettuate
    icon: mdi:calendar-range
    initial: 0
    maximum: 7
    step: 1    


################################################################################
##                  Input Number
###################################################

input_number:
   vacuum_ripetizioni_stanza_16:
    name: *stanza_16
    initial: 1
    min: 1
    max: 3
    step: 1
   
   vacuum_ripetizioni_stanza_19:
    name: *stanza_19
    initial: 1
    min: 1
    max: 3
    step: 1   
    
   vacuum_ripetizioni_stanza_17:
    name: *stanza_17
    initial: 1
    min: 1
    max: 3
    step: 1       

   vacuum_ripetizioni_stanza_23:
    name: *stanza_23
    initial: 1
    min: 1
    max: 3
    step: 1       

   vacuum_ripetizioni_stanza_20:
    name: *stanza_20
    initial: 1
    min: 1
    max: 3
    step: 1   

   vacuum_ripetizioni_stanza_21:
    name: *stanza_21
    initial: 1
    min: 1
    max: 3
    step: 1   

   vacuum_ripetizioni_stanza_18:
    name: *stanza_18 
    initial: 1
    min: 1
    max: 3
    step: 1    

   vacuum_ripetizioni_stanza_22:
    name: *stanza_22 
    initial: 1
    min: 1
    max: 3
    step: 1 

   vacuum_ripetizioni_zona:
    name: Ripetizioni Zona
    initial: 1
    min: 1
    max: 3
    step: 1     
    
    
################################################################################
##                  Input Select
###################################################
input_select:
  vacuum_fan_speed:
    name: Tipo di aspirazione
    options:
    - Silenzioso
    - Bilanciato
    - Medio
    - Turbo
  
  vacuum_water_mode:
    name: Quantita Acqua
    options:
    - 'off'
    - low
    - medium
    - high    
    

################################################################################
##                  Input Boolean
###################################################
input_boolean:
  
  vacuum_svuota_serbatoio:
    name: Svuota Serbatoio

  vacuum_stanza_16:
    name: *stanza_16
  vacuum_stanza_19:
    name: *stanza_19
  vacuum_stanza_17:
    name: *stanza_17
  vacuum_stanza_23:
    name: *stanza_23
  vacuum_stanza_20:
    name: *stanza_20
  vacuum_stanza_21:
    name: *stanza_21
  vacuum_stanza_18:
    name: *stanza_18
  vacuum_stanza_22:
    name: *stanza_22
  vacuum_zona_1:
    name: *zona_1
  vacuum_zona_2:
    name: *zona_2
  vacuum_zona_3:
    name: *zona_3   
  vacuum_zona_4:
    name: *zona_4 
  vacuum_zona_5:
    name: *zona_5
  vacuum_zona_6:
    name: *zona_6    

################################################################################
##                  Sensor
###################################################
sensor:
  - platform: template
    sensors:

      ######################
      ##  Sensori Roborock
      ######################      
      vacuum_stato:
        friendly_name: Stato robot
        value_template: "{{ state_attr('XXX', 'status') }}"                 #vacuum entity_id
        icon_template: >
          {% set val =   state_attr('XXX', 'status')  %}                    #vacuum entity_id
          {% if val == 'Charging' %}
            mdi:battery-charging
          {% elif val == 'Cleaning' %}
            mdi:move-resize-variant
          {% elif val == 'Returning home' %}
            mdi:keyboard-return
          {% elif val == 'Idle' %}
            mdi:dots-horizontal
          {% elif val == 'Paused' %}
            mdi:pause-circle
          {% elif val == 'docked' %}
            mdi:pause-circle
          {% else %}
            mdi:battery
          {% endif %}

      vacuum_fanspeed:
        friendly_name: Fan Speed
        value_template: "Mode: {{ state_attr('XXX', 'fan_speed') }}"       #vacuum entity_id
        icon_template: 'mdi:speedometer'
      
      vacuum_stato_batteria:
        friendly_name: Batteria robot
        value_template: "{{ state_attr('XXX', 'battery_level') }}"         #vacuum entity_id
        unit_of_measurement: '%'
        icon_template: "{{ state_attr('XXX', 'battery_icon') }}"            #vacuum entity_id
      
      vacuum_tempo_pulizia:
        friendly_name: Tempo ultima pulizia
        unit_of_measurement: 'min'
        value_template: "{{ state_attr('XXX', 'cleaning_time')  }}"          #vacuum entity_id
        icon_template: 'mdi:timer'
      
      vacuum_area_pulita:
        friendly_name: Area Pulita
        unit_of_measurement: 'm ²'
        value_template: "{{ state_attr('XXX', 'cleaned_area')  }}"             #vacuum entity_id
        icon_template: 'mdi:ruler'
      
      vacuum_spazzola_centrale:
        friendly_name: Sostituzione Spazzola
        unit_of_measurement: '%'
        value_template: "{{ ((state_attr('XXX', 'main_brush_left')+1)*100/300) | int}}"        #vacuum entity_id
        icon_template: 'mdi:screwdriver'
      
      vacuum_spazzolina:
        friendly_name: Sostituzione Spazzolina
        unit_of_measurement: '%'
        value_template: "{{ ((state_attr('XXX', 'side_brush_left')+1)*100/200) | int}}"            #vacuum entity_id
        icon_template: 'mdi:screwdriver'
      
      vacuum_filtro:
        friendly_name: Sostituzione Filtro
        unit_of_measurement: '%'
        value_template: "{{ ((state_attr('XXX', 'filter_left')+1)*100/150) | int}}"                #vacuum entity_id
        icon_template: 'mdi:screwdriver'
      
      vacuum_sensori:
        friendly_name: Pulizia Sensori
        unit_of_measurement: '%'
        value_template: "{{ ((state_attr('XXX', 'sensor_dirty_left')+1)*100/30) | int}}"               #vacuum entity_id
        icon_template: 'mdi:screwdriver'
      
      vacuum_non_disturbare:
        friendly_name: Non disturbare
        value_template: "{{ state_attr('XXX', 'do_not_disturb')  }}"                       #vacuum entity_id
        icon_template: >
          {% set val =  state_attr('XXX', 'do_not_disturb')  %}                            #vacuum entity_id
          {% if val == 'on' %}
            mdi:do-not-disturb
          {% else %}
            mdi:do-not-disturb-off
          {% endif %}
      
      vacuum_inizio_non_disturbare:
        friendly_name: Inizio non disturbare
        value_template: "On DND: {{ state_attr('XXX', 'do_not_disturb_start') }}"              #vacuum entity_id
        icon_template: 'mdi:screwdriver'
      
      vacuum_fine_non_disturbare:
        friendly_name: Fine non disturbare
        value_template: "Off DND: {{ state_attr('XXX', 'do_not_disturb_start') }}"                 #vacuum entity_id
        icon_template: 'mdi:screwdriver'          

      vacuum_stanze_selezionate:
        friendly_name: 'Stanze Selezionate'
        value_template: >-
            {% set object = [states('input_boolean.vacuum_stanza_16'), states('input_boolean.vacuum_stanza_17'), states('input_boolean.vacuum_stanza_18'), states('input_boolean.vacuum_stanza_19'), states('input_boolean.vacuum_stanza_20'), states('input_boolean.vacuum_stanza_21'), states('input_boolean.vacuum_stanza_22'), states('input_boolean.vacuum_stanza_23')] %}
            {{ object | select('equalto', 'on') | list | count >= 1}}

      vacuum_zone_selezionate:
        friendly_name: 'Zone Selezionate'
        value_template: >-
            {% set object = [states('input_boolean.vacuum_zona_1'), states('input_boolean.vacuum_zona_2'), states('input_boolean.vacuum_zona_3'), states('input_boolean.vacuum_zona_4'), states('input_boolean.vacuum_zona_5'), states('input_boolean.vacuum_zona_6')] %}
            {{ object | select('equalto', 'on') | list | count >= 1}}


################################################################################
##                  Script
###################################################
script:
  vacuum_pulizia_casa:
    sequence:
      - service: xiaomi_miio.vacuum_clean_segment
        data_template:
          entity_id: *entity
          segments: *coord_casa       
  
           
  vacuum_stanza_16:
    alias: *stanza_16
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_16
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_16') | int }}" 

  vacuum_stanza_17:
    alias: *stanza_17 
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_17
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_17') | int }}"    

  vacuum_stanza_18:
    alias: *stanza_18
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_18
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_18') | int }}"            

  vacuum_stanza_19:
    alias: *stanza_19  
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_19
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_19') | int }}" 

  vacuum_stanza_20:
    alias: *stanza_20  
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_20
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_20') | int }}"  

  vacuum_stanza_21:
    alias: *stanza_21   
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_21
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_21') | int }}"  

  vacuum_stanza_22:
    alias: *stanza_22   
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_stanza_22
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_22') | int }}"  

  vacuum_stanza_23:
    alias: *stanza_23
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity 
          zone: *coord_stanza_23
          repeats: "{{states('input_number.vacuum_ripetizioni_stanza_23') | int }}"            

  vacuum_zona_1:
    alias: *zona_1  
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_zona_1
          repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}"  

  vacuum_zona_2:
    alias: *zona_2  
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_zona_2
          repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}"

  vacuum_zona_3:
    alias: *zona_3  
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_zona_3
          repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}"
          
  vacuum_zona_4:
     alias: *zona_4  
     sequence:
       - service: xiaomi_miio.vacuum_clean_zone
         data_template:
           entity_id: *entity
           zone: *coord_zona_4
           repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}" 

  vacuum_zona_5:
    alias: *zona_5
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_zona_5 
          repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}"

  vacuum_zona_6:
    alias: *zona_6
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data_template:
          entity_id: *entity
          zone: *coord_zona_6
          repeats: "{{states('input_number.vacuum_ripetizioni_zona') | int }}"          

#### MULTISTANZA        
  vacuum_pulizia_stanze:
    alias: Pulizia Stanze
    sequence:
      - condition: template
        value_template: "{{ is_state(room_bool, 'on') }}"
      - service: script.turn_on
        data_template:
          entity_id: '{{ room_cleaner }}'
      - wait_template: "{{ is_state('XXX', 'cleaning') }}"                 #vacuum entity_id   
      - wait_template: "{{not is_state('XXX', 'cleaning') }}"               #vacuum entity_id
      - service: vacuum.pause
        data_template:
          entity_id: *entity       
      - service: input_boolean.turn_off
        data_template:
          entity_id: '{{ room_bool }}'
      - delay: '00:00:01'

  vacuum_multi_stanze:
    alias: Stanze selezionate
    sequence:
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_16
          room_bool: input_boolean.vacuum_stanza_16
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_17
          room_bool: input_boolean.vacuum_stanza_17
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_18
          room_bool: input_boolean.vacuum_stanza_18
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"      
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_19
          room_bool: input_boolean.vacuum_stanza_19
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_pulizia_cameradaletto
          room_bool: input_boolean.vacuum_stanza_20   
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_21
          room_bool: input_boolean.vacuum_stanza_21  
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_22
          room_bool: input_boolean.vacuum_stanza_22  
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_stanza_23
          room_bool: input_boolean.vacuum_stanza_23
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"          
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_1
          room_bool: input_boolean.vacuum_zona_1
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"          
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_2
          room_bool: input_boolean.vacuum_zona_2
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"         
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_3
          room_bool: input_boolean.vacuum_zona_3
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"     
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_4
          room_bool: input_boolean.vacuum_zona_4
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"          
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_5
          room_bool: input_boolean.vacuum_zona_5
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"         
      - service: script.vacuum_pulizia_stanze
        data_template:
          room_cleaner: script.vacuum_zona_6
          room_bool: input_boolean.vacuum_zona_6
      - wait_template: "{{ is_state('script.vacuum_pulizia_stanze', 'off') }}"          
      - service: script.turn_on
        entity_id: script.vacuum_torna_a_casa             
###########
  vacuum_torna_a_casa:
    alias: "Torna a Casa"
    sequence:
      - service: vacuum.return_to_base
        entity_id: *entity
        
  vacuum_interrompi_pulizie:
    alias: "Ferma Pulizie"
    sequence:
      - service: vacuum.stop
        entity_id: *entity
      - delay: '00:00:01'
      - service: vacuum.return_to_base
        entity_id: *entity

  vacuum_start:
    sequence:
      - service: vacuum.start
        entity_id: *entity
        
  vacuum_pause:
    sequence:
      - service: vacuum.pause
        entity_id: *entity        

  vacuum_stop:
    sequence:
      - service: vacuum.stop
        entity_id: *entity
        
  vacuum_clean_spot:
    sequence:
      - service: vacuum.clean_spot
        entity_id: *entity
        
  vacuum_locate:
    sequence:
      - service: vacuum.locate
        entity_id: *entity        

  ### SET FAN ###          
  vacuum_set_fan_silent:
    sequence:
      service: vacuum.set_fan_speed
      data:
        entity_id: *entity
        fan_speed: Silent

  vacuum_set_fan_standard:
    sequence:
      service: vacuum.set_fan_speed
      data:
        entity_id: *entity
        fan_speed: Standard

  vacuum_set_fan_medium:
    sequence:
      service: vacuum.set_fan_speed
      data:
        entity_id: *entity
        fan_speed: Medium
 
  vacuum_set_fan_turbo:
    sequence:
      service: vacuum.set_fan_speed
      data:
        entity_id: *entity
        fan_speed: Turbo  

  ### SET ACQUA ### 
  vacuum_set_water_off:
    sequence:
      - service: vacuum.send_command
        data_template:
          params: [200]
          command: set_water_box_custom_mode
          entity_id: *entity

  vacuum_set_water_low:
    sequence:
      - service: vacuum.send_command
        data_template:
          params: [201]
          command: set_water_box_custom_mode
          entity_id: *entity
          
  vacuum_set_water_medium:
    sequence:
      - service: vacuum.send_command
        data_template:
          params: [202]
          command: set_water_box_custom_mode
          entity_id: *entity
  
  vacuum_set_water_high:
    sequence:
      - service: vacuum.send_command
        data_template:
          params: [203]
          command: set_water_box_custom_mode
          entity_id: *entity
          
  ### SERBATOIO ### 
  vacuum_pulizia_serbatoio:
    sequence:
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1    
      - service: vacuum.send_command
        data_template:
          params: *coord_cestino
          command: app_goto_target
          entity_id: *entity

  vacuum_carica_acqua:
    sequence:
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1    
      - service: vacuum.send_command
        data_template:
          params: *coord_acqua
          command: app_goto_target
          entity_id: *entity          

  ### RESET SENSORI ###          
  vacuum_reset_main_brush_left:
    alias: "Reset ore cambio Spazzola"
    sequence:
      - service: vacuum.send_Command
        data:
          entity_id: *entity
          command: reset_consumable
          params: ['main_brush_work_time']
          
  vacuum_reset_side_brush_work_time:
    alias: "Reset ore cambio Spazzolina"
    sequence:
      - service: vacuum.send_Command
        data:
          entity_id: *entity
          command: reset_consumable
          params: ['side_brush_work_time'] 

  vacuum_reset_filter_work_time:
    alias: "Reset ore cambio Filtro"
    sequence:
      - service: vacuum.send_Command
        data:
          entity_id: *entity
          command: reset_consumable
          params: ['filter_work_time']  

  vacuum_reset_sensor_dirty_time:
    alias: "Reset ore Sensori"
    sequence:
      - service: vacuum.send_Command
        data:
          entity_id: *entity
          command: reset_consumable
          params: ['sensor_dirty_time']  

  vacuum_set_aspirapolvere:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_fan_speed
          option: Turbo
      - delay: 1
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_set_water_off
          option: 'off'             
          
  vacuum_set_lavaggio_silent:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_fan_speed
          option: Silenzioso
      - delay: 1
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_set_water_off
          option: high 

  vacuum_set_lavaggio:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_fan_speed
          option: Turbo
      - delay: 1
      - service: input_select.select_option
        data:
          entity_id: input_select.vacuum_set_water_off
          option: high 

###################################################
##                  Pulizie con Google
###################################################

  ######################
  ##  ASPIRA
  ######################
  vacuum_pulizia_stanza_16:
    alias: *stanza_16  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_16          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_pulizia_stanza_17:
    alias: *stanza_17
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_17         
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_pulizia_stanza_18:
    alias: *stanza_18
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_18         
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_pulizia_stanza_19:
    alias: *stanza_19
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_19          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_pulizia_stanza_20:
    alias: *stanza_20
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_20          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_pulizia_stanza_21:
    alias: *stanza_21
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_21          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_pulizia_stanza_22:
    alias: *stanza_22
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_22          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_pulizia_stanza_23:
    alias: *stanza_23  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_23          
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_pulizia_zona_1:
    alias: *zona_1
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_1        
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere     
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze      

  vacuum_pulizia_zona_2:
    alias: *zona_2
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_2        
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere  
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze 

  vacuum_pulizia_zona_3:
    alias: *zona_3
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_3      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere     
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_pulizia_zona_4:
    alias: *zona_4
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_4      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_pulizia_zona_5:
    alias: *zona_5
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_5      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere       
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze        
         
  vacuum_pulizia_zona_6:
    alias: *zona_6
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_6      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_aspirapolvere       
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  ######################
  ##  LAVA
  ######################
  vacuum_lava_stanza_16:
    alias: *stanza_16   
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_16          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_stanza_17:
    alias: *stanza_17  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_17         
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_lava_stanza_18:
    alias: *stanza_18
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_18         
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_lava_stanza_19:
    alias: *stanza_19  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_19          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_lava_stanza_20:
    alias: *stanza_20
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_20          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_stanza_21:
    alias: *stanza_21
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_21          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_stanza_22:
    alias: *stanza_22
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_22          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_lava_stanza_23:
    alias: *stanza_23
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_stanza_23          
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
  vacuum_lava_zona_1:
    alias: *zona_1 
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_1        
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio   
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze      

  vacuum_lavaa_zona_2:
    alias: *zona_2
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_2        
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_zona_3:
    alias: *zona_3
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_3      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio       
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_zona_4:
    alias: *zona_4
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_4      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio   
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze

  vacuum_lava_zona_5:
    alias: *zona_5  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_5      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio       
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze        
         
  vacuum_lava_zona_6:
    alias: *zona_6  
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: 
            - input_boolean.vacuum_zona_6      
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_set_lavaggio       
      - delay: 1
      - service: script.turn_on
        entity_id: script.vacuum_multi_stanze
        
####### FINE SCRIPT PER GOOGLE      

################################################################################
##                  Automations
###################################################
automation:

#  - alias: Vacuum - Recupero dati fan
#    initial_state: 'on'
#    trigger:
#      platform: state
#      entity_id: XXX
#      attribute: fan_speed
#    action:
#      - service: input_select.set_options
#        entity_id: input_select.vacuum_fan_speed
#        data_template:
#          options: >
#            {% if state_attr('XXX', 'fan_speed') == 'Silent' %}
#             Silenzioso
#            {% elif state_attr('XXX', 'fan_speed') == 'Standard' %}
#             Bilanciato
#            {% elif state_attr('XXX', 'fan_speed') == 'Medium' %}
#             Medio
#            {% elif state_attr('XXX', 'fan_speed') == 'Turbo' %}
#             Turbo
#            {% endif %}

  - alias: Vacuum-Set Velocità aspirazione
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: input_select.vacuum_fan_speed
    action:
      - service_template: >
          {% if trigger.to_state.state == 'Silenzioso' %}
            script.vacuum_set_fan_silent
          {% elif trigger.to_state.state == 'Bilanciato' %}
            script.vacuum_set_fan_standard
          {% elif trigger.to_state.state == 'Medio' %}
            script.vacuum_set_fan_medium
          {% elif trigger.to_state.state == 'Turbo' %}
            script.vacuum_set_fan_turbo
          {% endif %}
          
  - alias: Vacuum-Set Quantita Acqua
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: input_select.vacuum_water_mode
    action:
      - service_template: >
          {% if trigger.to_state.state == 'off' %}
            script.vacuum_set_water_off
          {% elif trigger.to_state.state == 'low' %}
            script.vacuum_set_water_low
          {% elif trigger.to_state.state == 'medium' %}
            script.vacuum_set_water_medium
          {% elif trigger.to_state.state == 'high' %}
            script.vacuum_set_water_high
          {% endif %}          
  ######################
  ##  Ritrono alla base
  ######################
  - alias: Vacuum-Ritorno automatico base se in pausa
    initial_state: true
    trigger:
      - platform: state
        entity_id: *entity
        to: "paused"
        for: "00:05:00"
    action:
      - service: script.vacuum_torna_a_casa

  - alias: Vacuum-Ritorno automatico base se errore
    initial_state: true
    trigger:
      - platform: state
        entity_id: *entity
        to: "unknown"
        for: "00:05:00"
    action:
      - service: script.vacuum_torna_a_casa


  #########################
  ##   Controllo Serbatoio
  #########################
  - alias: Vacuum-Counter Pulizia
    initial_state: true
    trigger:
      - platform: state
        entity_id: *entity
        to: 'cleaning'
        for:
          minutes: 2
    condition: []
    action:
      service: counter.increment
      data:
        entity_id: counter.vacuum_pulizie_effettuate

  - alias: Vacuum-Ripristino Counter Pulizia
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        to: 'off'
    condition: []
    action:
      service: counter.reset
      data:
        entity_id: counter.vacuum_pulizie_effettuate       

  - alias: Vacuum-Svuota serbatoio
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: counter.vacuum_pulizie_effettuate
        above: 5
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.vacuum_svuota_serbatoio
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX*':                              #NOME ASSISTENTE
            
            Hai effettuato 6 pulizie senza svuotare il serbatoio. Svuota il Serbatoio!!!
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message
      - service: tts.google_say
        entity_id: *play
        data:
          message: "Ti ricordo che devi svuotare il serbatoio di XXX!"      #NOME ASSISTENTE            


  ################
  ##  NOTIFICHE
  ################

  - alias: Vacuum-Notifica inizio pulizie
    initial_state: true
    trigger:
      platform: state
      entity_id: *entity
      from: 'docked'
      to: 'cleaning'
      for:
        seconds: 30
    condition: []
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX*':                                          #NOME ASSISTENTE
            
            Pulizia Casa Avviata
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message
      - service: tts.google_say
        entity_id: *play
        data:
          message: "Sono le {{ states('sensor.time') }}, e XXX inizia a pulire casa "       #NOME ASSISTENTE     


  - alias: Vacuum-Notifica fine pulizie
    initial_state: true
    trigger:
      platform: state
      entity_id: *entity
      from: 'returning'
      to: 'docked'
    condition: []
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX*':                                          #NOME ASSISTENTE
            
            Pulizia Casa Terminata Si ricorda di svuotare il serbatoio !
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message
      - service: tts.google_say
        entity_id: *play
        data:
          message: "Sono le {{ states('sensor.time') }}, e XXX ha terminato le pulizie"    #NOME ASSISTENTE
      - service: input_number.set_value
        data:
          entity_id: 
            - input_number.vacuum_ripetizioni_stanza_16 
            - input_number.vacuum_ripetizioni_stanza_17 
            - input_number.vacuum_ripetizioni_stanza_18 
            - input_number.vacuum_ripetizioni_stanza_19
            - input_number.vacuum_ripetizioni_stanza_20 
            - input_number.vacuum_ripetizioni_stanza_21 
            - input_number.vacuum_ripetizioni_stanza_22 
            - input_number.vacuum_ripetizioni_stanza_23
            - input_number.vacuum_ripetizioni_zona             
          value: "1.0"             
            
  - alias: Vacuum-Notifica base scollegata
    initial_state: true
    trigger:
      platform: state
      entity_id: *entity
      to: 'unknown'
      for:
        minutes: 10
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX*':                                      #NOME ASSISTENTE
            
            Sembra che la base non sia più collegata alla corrente.
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message 
      - service: tts.google_say
        entity_id: *play
        data:
          message: "Sembra che la base di XXX non sia più collegata alla corrente!"         #NOME ASSISTENTE

  - id: Vacuum-Notifica in errore
    alias: Vacuum-Notifica in errore
    initial_state: true
    trigger:
      - platform: state
        entity_id: *entity
        to: "error"
        for: "00:05:00"
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX - Vacuum Error*'                                #NOME ASSISTENTE
            
            "Attenzione. Probabilmente XXX ha un problema. Qualcuno può controllare? Grazie."     #NOME ASSISTENTE
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message 
      - service: tts.google_say
        entity_id: *play
        data:
          message: "Attenzione. Probabilmente XXX ha un problema. Qualcuno può controllare? Grazie."    #NOME ASSISTENTE
          
  #######################
  ##  NOTIFICHE RICAMBI
  #######################
  - alias: Vacuum-Notifica filtro Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: "{{ state_attr('XXX', 'filter_left') | int < 14 }}"          #vacuum entity_id
    condition:
      - condition: state
        entity_id: binary_sensor.connessione_vacuum
        state: 'on'      
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX - Ricambi*'                         # NOME ASSISTENTE
            
            "Livello di usra del filtro: {{ states(sensor.vacuum_filtro) }}%.Prevedi la sostituzione!"
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message
    
  
  - alias: Vacuum-Notifica Spazzolina Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: "{{ state_attr('XXX', 'side_brush_left')| int < 20 }}"       #vacuum entity_id
    condition:
      - condition: state
        entity_id: binary_sensor.connessione_vacuum
        state: 'on'          
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX - Ricambi*'                                             #NOME ASSISTENTE
            
            "Livello di usra della spazzolina: {{ states(sensor.vacuum_spazzolina) }}%.Prevedi la sostituzione"
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message
            
  
  
  - alias: Vacuum-Notifica Spazzola Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: "{{ state_attr('XXX', 'main_brush_left') | int < 10 }}"              #vacuum entity_id
    condition:
      - condition: state
        entity_id: binary_sensor.connessione_vacuum
        state: 'on'        
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX - Ricambi*':                        #NOME ASSISTENTE
            
            "Livello di usura della spazzola principale: {{ states(sensor.vacuum_spazzola_centrale) }}%.Prevedi la sostituzione!"
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message      
    

  - id: Vacuum-Notifica pulizia sensori
    alias: Vacuum-Notifica pulizia sensori
    initial_state: true
    trigger:
      platform: template
      value_template: "{{ state_attr('XXX', 'sensor_dirty_left') | int < 2 }}"             #vacuum entity_id
    condition:
      - condition: state
        entity_id: binary_sensor.connessione_vacuum
        state: 'on'         
    action:
      - data:
          disable_notification: false
          disable_web_page_preview: false
          message: >
            {{ "\U0001F30A"}} '*XXX - Sensori Sporchi*'                                                 #NOME ASSISTENTE
            
            "Livello di sporco sensori: {{ states(sensor.vacuum_sensori) }}%. Eseguire una pulizia!"
          parse_mode: markdown
          target: *telegram
          timeout: 1000
        service: telegram_bot.send_message


  - id: 'Vacuum-Notifica Cambio stato'
    initial_state: true
    alias: Notifica - Vacuum cambio stato
    trigger:
    - platform: state
      entity_id: binary_sensor.connessione_vacuum
      to: 'off'
    condition: []
    action:
    - data:
        disable_notification: false
        disable_web_page_preview: false
        message: >
          {{ "\U0001F30A"}} *Robot cambio stato Ping*
          
          STATO: {{states('binary_sensor.connessione_vacuum') }}
        parse_mode: markdown
        target: *telegram
        timeout: 1000
      service: telegram_bot.send_message
    mode: single   

  - id: 'Vacuum-Notifica Cambio stato1'
    initial_state: true
    alias: Notifica - Vacuum cambio stato1
    trigger:
    - platform: state
      entity_id: *entity
      to: 'error'
    condition: []
    action:
    - data:
        disable_notification: false
        disable_web_page_preview: false
        message: >
          {{ "\U0001F30A"}} *Robot cambio stato XXX*
          
          STATO: {{states('XXX') }}                            #vacuum entity_id
        parse_mode: markdown
        target: *telegram
        timeout: 1000
      service: telegram_bot.send_message
    mode: single       
